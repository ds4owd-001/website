{
  "hash": "ea7663cf70419adb38bb644dd8b6e380",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Get an account on GitHub\"\n---\n\n\n## {{< fa brands github >}} Step 1: Get an account on GitHub\n\nTo set up an account on GitHub, follow these general steps:\n\n1.  Go to the GitHub website at <https://github.com/>.\n2.  Click on the \"Sign up\" button on the top right corner of the page.\n3.  Enter your preferred username, email address, and password in the provided fields.\n4.  Choose whether you want to receive updates and announcements via email.\n5.  Complete the verification process by solving a puzzle and entering a verification code sent to your email.\n\n::: {.callout-tip collapse=\"true\"}\n## Username advice from: [Happy Git and GitHub for the useR](https://happygitwithr.com/github-acct.html#github-acct)\n\nYou will be able to upgrade to a paid level of service, apply discounts, join organizations, etc. in the future, so don't fret about any of that now. **Except your username. You might want to give that some thought.**\n\nA few tips, which sadly tend to contradict each other:\n\n-   Incorporate your actual name! People like to know who they're dealing with. Also makes your username easier for people to guess or remember.\n-   Reuse your username from other contexts, e.g., Twitter or Slack. But, of course, someone with no GitHub activity will probably be squatting on that.\n-   Pick a username you will be comfortable revealing to your future boss.\n-   Shorter is better than longer.\n-   Be as unique as possible in as few characters as possible. In some settings GitHub auto-completes or suggests usernames.\n-   Make it timeless. Don't highlight your current university, employer, or place of residence, e.g. JennyFromTheBlock.\n-   Avoid words laden with special meaning in programming.\n-   Avoid the use of upper vs. lower case to separate words. We highly recommend all lowercase. GitHub treats usernames in a case insensitive way, but using all lowercase is kinder to people doing downstream regular expression work with usernames, in various languages. A better strategy for word separation is to use a hyphen `-`.\n\nYou can change your username later, but better to get this right the first time.\n\n-   <https://help.github.com/articles/changing-your-github-username/>\n-   <https://help.github.com/articles/what-happens-when-i-change-my-username/>\n:::\n\n## {{< fa brands github >}} Step 2: Open an issue on GitHub\n\n::: {.callout-note collapse=\"true\"}\n## If you have missed Module 01\n\nIf you have missed Module 01 and you are completing this assignment as part of your homeowkr, work through Step 2 without tagging your neighbor. You can tag Lars with @larnsce instead.\n\n:::\n\n::: task\n\n1. Open [github.com](https://github.com/) in your browser and login with your credentials\n2. Exchange your GitHub username with your neighbor\n3. Find and open the `website` repository in the rbtl-fs24 GitHub organisation\n4. Find the issue tracker\n5. Open an issue with the title \"Open first issue on GitHub\" \n6. Add your neighbor to the list of Assignees on the right panel\n7. Add a comment to the issue and tag Lars with [@larnsce]{.highlight-yellow} and your [room partner]{.highlight-yellow}. Add some text.\n8. Click submit new issue\n9. Check if you have received a notification on GitHub, and open the inbox.\n10. Open the issue and respond to the comment of your room partner.\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../../slides/img/lec-01/github-notifications-inbox.png){width=450}\n:::\n:::\n",
    "supporting": [
      "am-01-1-github_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}